[gd_scene load_steps=2 format=3 uid="uid://4e3ms8cv0pq"]

[sub_resource type="GDScript" id="GDScript_2afbw"]
script/source = "class_name Target
extends Node2D

var target: Creature = null

var squareSize := Global.minSquareSize

var parentBoard: CreatureBoard = null
var gridPos := Vector2i.ZERO: set = set_obs_coords


func init(sqrSize: float) -> void:
	squareSize = sqrSize
	determine_grid_pos()


func _draw():
	draw_rect(
		Rect2(
			Vector2.ZERO,
			Vector2(
				squareSize,
				squareSize
			)
		),
		Color.DARK_ORANGE,
		false
	)


func set_obs_coords(coords: Vector2) -> void:
	gridPos = coords
	target = parentBoard.get_vect(coords)
	_on_board_resized(squareSize)


func set_parent_board(board) -> void:
	parentBoard = board


func _on_board_resized(sqrSize) -> void:
	squareSize = sqrSize

	determine_grid_pos()

	queue_redraw()


func _on_tick(tickCount):
	if target == null:
		# get info about creatures on tile
		return

	position = target.position - Vector2(squareSize / 2, squareSize / 2)


func determine_grid_pos() -> void:
	position = Vector2(
		gridPos.x * squareSize,
		gridPos.y * squareSize
	)
	print(\"pos: \", position)
"

[node name="Control" type="Node2D"]
script = SubResource("GDScript_2afbw")
